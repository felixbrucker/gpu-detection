name: CI
on: push

jobs:
  build:
    name: Build
    strategy:
      fail-fast: false
      matrix:
        node-version: [ 12.x ]
        os: [ ubuntu-latest, macos-latest ]

    runs-on: ${{ matrix.os }}
    steps:
      - name: Install ubuntu dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get -qq update
          sudo apt-get install -y opencl-headers ocl-icd-opencl-dev
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: yarn install
        run: yarn install
      - name: Package build archive
        run: yarn run package
      - name: Save build archive
        uses: actions/upload-artifact@v2
        with:
          name: build-archive-${{ matrix.os }}
          path: build/*.tar.gz

  publish-release:
    name: Publish release
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Fetch build archives
        uses: actions/download-artifact@v2
      - uses: ncipollo/release-action@v1
        with:
          artifacts: "build-archive-*/*.tar.gz"
          omitBody: true
          token: ${{ secrets.GITHUB_TOKEN }}

  publish-to-npm:
    name: Publish to npm
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Set up Node.js 12.x
        uses: actions/setup-node@v2
        with:
          node-version: 12.x
          registry-url: 'https://registry.npmjs.org'
      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        run: npm publish
